{"version":3,"sources":["components/Categories/Category/Category.module.css","components/Feed/Feed.module.css","components/Feed/SingleImage/SingleImage.module.css","components/Categories/Categories.module.css","components/Categories/Category/Category.js","components/Categories/Categories.js","components/Feed/SingleImage/SingleImage.js","components/Feed/ShowMore/ShowMore.js","components/Feed/Feed.js","App.js","serviceWorker.js","index.js","components/Feed/ShowMore/ShowMore.module.css"],"names":["module","exports","Category","MultiColumn","SingleImage","Categories","Heading","category","props","react_default","a","createElement","onClick","chooseCategory","value","id","className","classes","name","categories","categoriesList","map","key","singleImage","src","imageUrl","alt","showMore","btn__wrap","ShowMore","Feed","imageFeed","images","image","url","App","state","selectedCategory","lastCategory","imagesCopy","showMoreImages","allImages","order","page","limit","pagination_count","event","this","setState","target","getImages","axios","defaults","headers","common","get","response","data","console","log","length","_context","t0","query_params","category_ids","params","_context2","concat","_context3","showMoar","prevState","getCategories","bind","components_Feed_Feed","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7acfe136.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Category\":\"Category_Category__32ame\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MultiColumn\":\"Feed_MultiColumn__Hlm2M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleImage\":\"SingleImage_SingleImage__1-MyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Categories\":\"Categories_Categories__2kuGL\",\"Heading\":\"Categories_Heading__PDCN2\"};","import React from 'react';\nimport classes from './Category.module.css'\n\nconst category = ( props ) => {\n    return (\n        <button onClick={props.chooseCategory} value={props.id}  className={classes.Category}>{props.name}</button>\n    );\n}\n\nexport default category;","import React from 'react';\nimport Category from './Category/Category'\nimport classes from './Categories.module.css'\n\n\nconst categories = ( props ) => {\n    const categoriesList = props.categories.map(category => <Category chooseCategory={props.chooseCategory} key={category.id} id={category.id} name={category.name} />)\n    return (\n        <div className={classes.Categories}>\n        <h3 className={classes.Heading}>Choose a CATegory:</h3> \n        {categoriesList}\n        </div>\n    );\n}\n\nexport default categories;","import React from 'react';\nimport classes from './SingleImage.module.css'\n\nconst singleImage = ( props ) => {\n\n    return (\n        <img className={classes.SingleImage} src={props.imageUrl} alt={props.imageUrl}></img>\n    );\n}\n\nexport default singleImage;","import React from 'react';\nimport classes from './ShowMore.module.css'\n\nconst showMore = ( props ) => {\n    return (\n        <div className={classes.btn__wrap}>\n            <button onClick={props.showMore} className={classes.ShowMore}>Show Moar</button>\n        </div>\n    );\n}\n\nexport default showMore;","import React from 'react';\nimport classes from './Feed.module.css'\nimport SingleImage from './SingleImage/SingleImage'\nimport ShowMore from './ShowMore/ShowMore'\n\nconst Feed = ( props ) => {\n    const imageFeed = props.images.map(image => <SingleImage key={image.id} imageUrl={image.url}/>)\n    return (\n        <div className={classes.MultiColumn}>\n\n            {imageFeed}\n            <ShowMore showMore={props.showMore}/>\n         </div>\n    );\n}\n\nexport default Feed;","import React, {Component} from 'react';\nimport './App.css';\nimport Categories from './components/Categories/Categories'\nimport Feed from './components/Feed/Feed'\nimport axios from 'axios'\n\nclass App extends Component  {\n  state = {\n    categories: [],\n    selectedCategory: null,\n    lastCategory: [],\n    images: [],\n    imagesCopy: [],\n    showMoreImages: [],\n    allImages: [],\n    order:'Desc',\n    page: 0,\n    limit: 10,\n    pagination_count: 0\n  }\n\n  chooseCategory(event) {\n    this.setState({selectedCategory: event.target.value});\n    this.setState({lastCategory: event.target.value});\n    this.setState({page: 0});\n    this.getImages();\n  }\n\n  async getCategories()\n  {\n      try{\n          axios.defaults.headers.common['x-api-key'] = \"8e805f31-3dfd-4cce-998c-e4337e5150ea\" \n          \n          let response = await axios.get('https://api.thecatapi.com/v1/categories/' ) \n          this.setState({categories: response.data});\n          console.log(\"-- (\"+this.state.categories.length +\") Categories from TheCatAPI.com\")\n\n          console.log(this.state.categories)\n      }catch(err){\n          console.log(err)\n      }\n  }\n\n\n  async getImages()\n  {\n      try{\n          axios.defaults.headers.common['x-api-key'] = \"8e805f31-3dfd-4cce-998c-e4337e5150ea\" \n          let query_params = {\n              limit: this.state.limit,\n              order: this.state.order,\n              page: this.state.page,\n              category_ids: this.state.selectedCategory\n          }\n\n          let response = await axios.get('https://api.thecatapi.com/v1/images/search', { params: query_params } ) \n          this.pagination_count = response.headers['pagination-count'];\n          this.setState({images: response.data});\n          console.log(\"-- (\"+this.state.images.length +\") Images from TheCatAPI.com\")\n          console.log( this.pagination_count ,'images available for this query.')\n      }catch(err){\n          console.log(err)\n      }\n  }\n\n\n  async showMoar()\n  {\n      try{\n          axios.defaults.headers.common['x-api-key'] = \"8e805f31-3dfd-4cce-998c-e4337e5150ea\" \n          this.setState({page: this.state.page ++});\n          let query_params = {\n              limit: this.state.limit,\n              order: this.state.order,\n              page: this.state.page,\n              category_ids: this.state.lastCategory[0]\n          }\n\n          console.log(this.state.page)\n          let response = await axios.get('https://api.thecatapi.com/v1/images/search', { params: query_params } ) \n          this.pagination_count = response.headers['pagination-count'];\n\n          this.setState({imagesCopy: this.state.images});\n          this.setState({showMoreImages: response.data});\n          this.setState({allImages: this.state.imagesCopy.concat(this.state.showMoreImages)});\n          console.log('imagesCopy:', this.state.imagesCopy);\n          console.log('showMoreImages:',this.state.showMoreImages);\n          console.log('allImages:',this.state.allImages);\n          this.setState({images: this.state.allImages});\n          this.setState({page: this.state.page + 1});\n          console.log(\"-- (\"+this.state.images.length +\") Images from TheCatAPI.com\")\n          console.log( this.pagination_count ,'images available for this query.')\n          \n      }catch(err){\n          console.log(err)\n      }\n  }\n\n\n  showMore() {\n    this.showMoar();\n  }\n\n\n  componentDidUpdate(prevState) {\n    if(this.state.selectedCategory) {\n      this.getImages();\n      this.setState({selectedCategory: null})\n    }\n  }\n\n\n  componentDidMount() {\n    this.getCategories();\n    this.getImages();\n  }\n\n  \n  render () {\n    return (\n      <div className=\"App\">\n        <Categories categories={this.state.categories} chooseCategory={this.chooseCategory.bind(this)}/>\n        <Feed showMore={this.showMore.bind(this)} images={this.state.images}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShowMore\":\"ShowMore_ShowMore__3WURR\",\"btn__wrap\":\"ShowMore_btn__wrap__1ijN7\"};"],"sourceRoot":""}